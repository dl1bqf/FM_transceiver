/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// drehgeber_2 address and mask defines
#pragma	ioport	drehgeber_2_Data_ADDR:	0x4
BYTE			drehgeber_2_Data_ADDR;
#pragma	ioport	drehgeber_2_DriveMode_0_ADDR:	0x104
BYTE			drehgeber_2_DriveMode_0_ADDR;
#pragma	ioport	drehgeber_2_DriveMode_1_ADDR:	0x105
BYTE			drehgeber_2_DriveMode_1_ADDR;
#pragma	ioport	drehgeber_2_DriveMode_2_ADDR:	0x7
BYTE			drehgeber_2_DriveMode_2_ADDR;
#pragma	ioport	drehgeber_2_GlobalSelect_ADDR:	0x6
BYTE			drehgeber_2_GlobalSelect_ADDR;
#pragma	ioport	drehgeber_2_IntCtrl_0_ADDR:	0x106
BYTE			drehgeber_2_IntCtrl_0_ADDR;
#pragma	ioport	drehgeber_2_IntCtrl_1_ADDR:	0x107
BYTE			drehgeber_2_IntCtrl_1_ADDR;
#pragma	ioport	drehgeber_2_IntEn_ADDR:	0x5
BYTE			drehgeber_2_IntEn_ADDR;
#define drehgeber_2_MASK 0x80
// drehgeber_2 Shadow defines
//   drehgeber_2_DataShadow define
extern unsigned char Port_1_Data_SHADE;
#define drehgeber_2_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// PTT_in address and mask defines
#pragma	ioport	PTT_in_Data_ADDR:	0x4
BYTE			PTT_in_Data_ADDR;
#pragma	ioport	PTT_in_DriveMode_0_ADDR:	0x104
BYTE			PTT_in_DriveMode_0_ADDR;
#pragma	ioport	PTT_in_DriveMode_1_ADDR:	0x105
BYTE			PTT_in_DriveMode_1_ADDR;
#pragma	ioport	PTT_in_DriveMode_2_ADDR:	0x7
BYTE			PTT_in_DriveMode_2_ADDR;
#pragma	ioport	PTT_in_GlobalSelect_ADDR:	0x6
BYTE			PTT_in_GlobalSelect_ADDR;
#pragma	ioport	PTT_in_IntCtrl_0_ADDR:	0x106
BYTE			PTT_in_IntCtrl_0_ADDR;
#pragma	ioport	PTT_in_IntCtrl_1_ADDR:	0x107
BYTE			PTT_in_IntCtrl_1_ADDR;
#pragma	ioport	PTT_in_IntEn_ADDR:	0x5
BYTE			PTT_in_IntEn_ADDR;
#define PTT_in_MASK 0x20
// PTT_in Shadow defines
//   PTT_in_DataShadow define
extern unsigned char Port_1_Data_SHADE;
#define PTT_in_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// RS_232_RX_DRA address and mask defines
#pragma	ioport	RS_232_RX_DRA_Data_ADDR:	0x0
BYTE			RS_232_RX_DRA_Data_ADDR;
#pragma	ioport	RS_232_RX_DRA_DriveMode_0_ADDR:	0x100
BYTE			RS_232_RX_DRA_DriveMode_0_ADDR;
#pragma	ioport	RS_232_RX_DRA_DriveMode_1_ADDR:	0x101
BYTE			RS_232_RX_DRA_DriveMode_1_ADDR;
#pragma	ioport	RS_232_RX_DRA_DriveMode_2_ADDR:	0x3
BYTE			RS_232_RX_DRA_DriveMode_2_ADDR;
#pragma	ioport	RS_232_RX_DRA_GlobalSelect_ADDR:	0x2
BYTE			RS_232_RX_DRA_GlobalSelect_ADDR;
#pragma	ioport	RS_232_RX_DRA_IntCtrl_0_ADDR:	0x102
BYTE			RS_232_RX_DRA_IntCtrl_0_ADDR;
#pragma	ioport	RS_232_RX_DRA_IntCtrl_1_ADDR:	0x103
BYTE			RS_232_RX_DRA_IntCtrl_1_ADDR;
#pragma	ioport	RS_232_RX_DRA_IntEn_ADDR:	0x1
BYTE			RS_232_RX_DRA_IntEn_ADDR;
#define RS_232_RX_DRA_MASK 0x1
// RS_232_RX_USB address and mask defines
#pragma	ioport	RS_232_RX_USB_Data_ADDR:	0x0
BYTE			RS_232_RX_USB_Data_ADDR;
#pragma	ioport	RS_232_RX_USB_DriveMode_0_ADDR:	0x100
BYTE			RS_232_RX_USB_DriveMode_0_ADDR;
#pragma	ioport	RS_232_RX_USB_DriveMode_1_ADDR:	0x101
BYTE			RS_232_RX_USB_DriveMode_1_ADDR;
#pragma	ioport	RS_232_RX_USB_DriveMode_2_ADDR:	0x3
BYTE			RS_232_RX_USB_DriveMode_2_ADDR;
#pragma	ioport	RS_232_RX_USB_GlobalSelect_ADDR:	0x2
BYTE			RS_232_RX_USB_GlobalSelect_ADDR;
#pragma	ioport	RS_232_RX_USB_IntCtrl_0_ADDR:	0x102
BYTE			RS_232_RX_USB_IntCtrl_0_ADDR;
#pragma	ioport	RS_232_RX_USB_IntCtrl_1_ADDR:	0x103
BYTE			RS_232_RX_USB_IntCtrl_1_ADDR;
#pragma	ioport	RS_232_RX_USB_IntEn_ADDR:	0x1
BYTE			RS_232_RX_USB_IntEn_ADDR;
#define RS_232_RX_USB_MASK 0x2
// rs232_tx_USB address and mask defines
#pragma	ioport	rs232_tx_USB_Data_ADDR:	0x0
BYTE			rs232_tx_USB_Data_ADDR;
#pragma	ioport	rs232_tx_USB_DriveMode_0_ADDR:	0x100
BYTE			rs232_tx_USB_DriveMode_0_ADDR;
#pragma	ioport	rs232_tx_USB_DriveMode_1_ADDR:	0x101
BYTE			rs232_tx_USB_DriveMode_1_ADDR;
#pragma	ioport	rs232_tx_USB_DriveMode_2_ADDR:	0x3
BYTE			rs232_tx_USB_DriveMode_2_ADDR;
#pragma	ioport	rs232_tx_USB_GlobalSelect_ADDR:	0x2
BYTE			rs232_tx_USB_GlobalSelect_ADDR;
#pragma	ioport	rs232_tx_USB_IntCtrl_0_ADDR:	0x102
BYTE			rs232_tx_USB_IntCtrl_0_ADDR;
#pragma	ioport	rs232_tx_USB_IntCtrl_1_ADDR:	0x103
BYTE			rs232_tx_USB_IntCtrl_1_ADDR;
#pragma	ioport	rs232_tx_USB_IntEn_ADDR:	0x1
BYTE			rs232_tx_USB_IntEn_ADDR;
#define rs232_tx_USB_MASK 0x4
// AGND address and mask defines
#pragma	ioport	AGND_Data_ADDR:	0x0
BYTE			AGND_Data_ADDR;
#pragma	ioport	AGND_DriveMode_0_ADDR:	0x100
BYTE			AGND_DriveMode_0_ADDR;
#pragma	ioport	AGND_DriveMode_1_ADDR:	0x101
BYTE			AGND_DriveMode_1_ADDR;
#pragma	ioport	AGND_DriveMode_2_ADDR:	0x3
BYTE			AGND_DriveMode_2_ADDR;
#pragma	ioport	AGND_GlobalSelect_ADDR:	0x2
BYTE			AGND_GlobalSelect_ADDR;
#pragma	ioport	AGND_IntCtrl_0_ADDR:	0x102
BYTE			AGND_IntCtrl_0_ADDR;
#pragma	ioport	AGND_IntCtrl_1_ADDR:	0x103
BYTE			AGND_IntCtrl_1_ADDR;
#pragma	ioport	AGND_IntEn_ADDR:	0x1
BYTE			AGND_IntEn_ADDR;
#define AGND_MASK 0x8
// aprs_option_1 address and mask defines
#pragma	ioport	aprs_option_1_Data_ADDR:	0x0
BYTE			aprs_option_1_Data_ADDR;
#pragma	ioport	aprs_option_1_DriveMode_0_ADDR:	0x100
BYTE			aprs_option_1_DriveMode_0_ADDR;
#pragma	ioport	aprs_option_1_DriveMode_1_ADDR:	0x101
BYTE			aprs_option_1_DriveMode_1_ADDR;
#pragma	ioport	aprs_option_1_DriveMode_2_ADDR:	0x3
BYTE			aprs_option_1_DriveMode_2_ADDR;
#pragma	ioport	aprs_option_1_GlobalSelect_ADDR:	0x2
BYTE			aprs_option_1_GlobalSelect_ADDR;
#pragma	ioport	aprs_option_1_IntCtrl_0_ADDR:	0x102
BYTE			aprs_option_1_IntCtrl_0_ADDR;
#pragma	ioport	aprs_option_1_IntCtrl_1_ADDR:	0x103
BYTE			aprs_option_1_IntCtrl_1_ADDR;
#pragma	ioport	aprs_option_1_IntEn_ADDR:	0x1
BYTE			aprs_option_1_IntEn_ADDR;
#define aprs_option_1_MASK 0x10
// mic_out address and mask defines
#pragma	ioport	mic_out_Data_ADDR:	0x0
BYTE			mic_out_Data_ADDR;
#pragma	ioport	mic_out_DriveMode_0_ADDR:	0x100
BYTE			mic_out_DriveMode_0_ADDR;
#pragma	ioport	mic_out_DriveMode_1_ADDR:	0x101
BYTE			mic_out_DriveMode_1_ADDR;
#pragma	ioport	mic_out_DriveMode_2_ADDR:	0x3
BYTE			mic_out_DriveMode_2_ADDR;
#pragma	ioport	mic_out_GlobalSelect_ADDR:	0x2
BYTE			mic_out_GlobalSelect_ADDR;
#pragma	ioport	mic_out_IntCtrl_0_ADDR:	0x102
BYTE			mic_out_IntCtrl_0_ADDR;
#pragma	ioport	mic_out_IntCtrl_1_ADDR:	0x103
BYTE			mic_out_IntCtrl_1_ADDR;
#pragma	ioport	mic_out_IntEn_ADDR:	0x1
BYTE			mic_out_IntEn_ADDR;
#define mic_out_MASK 0x20
// mic_in address and mask defines
#pragma	ioport	mic_in_Data_ADDR:	0x0
BYTE			mic_in_Data_ADDR;
#pragma	ioport	mic_in_DriveMode_0_ADDR:	0x100
BYTE			mic_in_DriveMode_0_ADDR;
#pragma	ioport	mic_in_DriveMode_1_ADDR:	0x101
BYTE			mic_in_DriveMode_1_ADDR;
#pragma	ioport	mic_in_DriveMode_2_ADDR:	0x3
BYTE			mic_in_DriveMode_2_ADDR;
#pragma	ioport	mic_in_GlobalSelect_ADDR:	0x2
BYTE			mic_in_GlobalSelect_ADDR;
#pragma	ioport	mic_in_IntCtrl_0_ADDR:	0x102
BYTE			mic_in_IntCtrl_0_ADDR;
#pragma	ioport	mic_in_IntCtrl_1_ADDR:	0x103
BYTE			mic_in_IntCtrl_1_ADDR;
#pragma	ioport	mic_in_IntEn_ADDR:	0x1
BYTE			mic_in_IntEn_ADDR;
#define mic_in_MASK 0x40
// adc_port address and mask defines
#pragma	ioport	adc_port_Data_ADDR:	0x0
BYTE			adc_port_Data_ADDR;
#pragma	ioport	adc_port_DriveMode_0_ADDR:	0x100
BYTE			adc_port_DriveMode_0_ADDR;
#pragma	ioport	adc_port_DriveMode_1_ADDR:	0x101
BYTE			adc_port_DriveMode_1_ADDR;
#pragma	ioport	adc_port_DriveMode_2_ADDR:	0x3
BYTE			adc_port_DriveMode_2_ADDR;
#pragma	ioport	adc_port_GlobalSelect_ADDR:	0x2
BYTE			adc_port_GlobalSelect_ADDR;
#pragma	ioport	adc_port_IntCtrl_0_ADDR:	0x102
BYTE			adc_port_IntCtrl_0_ADDR;
#pragma	ioport	adc_port_IntCtrl_1_ADDR:	0x103
BYTE			adc_port_IntCtrl_1_ADDR;
#pragma	ioport	adc_port_IntEn_ADDR:	0x1
BYTE			adc_port_IntEn_ADDR;
#define adc_port_MASK 0x80
// rx_aprs address and mask defines
#pragma	ioport	rx_aprs_Data_ADDR:	0x4
BYTE			rx_aprs_Data_ADDR;
#pragma	ioport	rx_aprs_DriveMode_0_ADDR:	0x104
BYTE			rx_aprs_DriveMode_0_ADDR;
#pragma	ioport	rx_aprs_DriveMode_1_ADDR:	0x105
BYTE			rx_aprs_DriveMode_1_ADDR;
#pragma	ioport	rx_aprs_DriveMode_2_ADDR:	0x7
BYTE			rx_aprs_DriveMode_2_ADDR;
#pragma	ioport	rx_aprs_GlobalSelect_ADDR:	0x6
BYTE			rx_aprs_GlobalSelect_ADDR;
#pragma	ioport	rx_aprs_IntCtrl_0_ADDR:	0x106
BYTE			rx_aprs_IntCtrl_0_ADDR;
#pragma	ioport	rx_aprs_IntCtrl_1_ADDR:	0x107
BYTE			rx_aprs_IntCtrl_1_ADDR;
#pragma	ioport	rx_aprs_IntEn_ADDR:	0x5
BYTE			rx_aprs_IntEn_ADDR;
#define rx_aprs_MASK 0x1
// rx_aprs Shadow defines
//   rx_aprs_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define rx_aprs_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// HF_powerPin address and mask defines
#pragma	ioport	HF_powerPin_Data_ADDR:	0x4
BYTE			HF_powerPin_Data_ADDR;
#pragma	ioport	HF_powerPin_DriveMode_0_ADDR:	0x104
BYTE			HF_powerPin_DriveMode_0_ADDR;
#pragma	ioport	HF_powerPin_DriveMode_1_ADDR:	0x105
BYTE			HF_powerPin_DriveMode_1_ADDR;
#pragma	ioport	HF_powerPin_DriveMode_2_ADDR:	0x7
BYTE			HF_powerPin_DriveMode_2_ADDR;
#pragma	ioport	HF_powerPin_GlobalSelect_ADDR:	0x6
BYTE			HF_powerPin_GlobalSelect_ADDR;
#pragma	ioport	HF_powerPin_IntCtrl_0_ADDR:	0x106
BYTE			HF_powerPin_IntCtrl_0_ADDR;
#pragma	ioport	HF_powerPin_IntCtrl_1_ADDR:	0x107
BYTE			HF_powerPin_IntCtrl_1_ADDR;
#pragma	ioport	HF_powerPin_IntEn_ADDR:	0x5
BYTE			HF_powerPin_IntEn_ADDR;
#define HF_powerPin_MASK 0x2
// HF_powerPin Shadow defines
//   HF_powerPin_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define HF_powerPin_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// PTTPin address and mask defines
#pragma	ioport	PTTPin_Data_ADDR:	0x4
BYTE			PTTPin_Data_ADDR;
#pragma	ioport	PTTPin_DriveMode_0_ADDR:	0x104
BYTE			PTTPin_DriveMode_0_ADDR;
#pragma	ioport	PTTPin_DriveMode_1_ADDR:	0x105
BYTE			PTTPin_DriveMode_1_ADDR;
#pragma	ioport	PTTPin_DriveMode_2_ADDR:	0x7
BYTE			PTTPin_DriveMode_2_ADDR;
#pragma	ioport	PTTPin_GlobalSelect_ADDR:	0x6
BYTE			PTTPin_GlobalSelect_ADDR;
#pragma	ioport	PTTPin_IntCtrl_0_ADDR:	0x106
BYTE			PTTPin_IntCtrl_0_ADDR;
#pragma	ioport	PTTPin_IntCtrl_1_ADDR:	0x107
BYTE			PTTPin_IntCtrl_1_ADDR;
#pragma	ioport	PTTPin_IntEn_ADDR:	0x5
BYTE			PTTPin_IntEn_ADDR;
#define PTTPin_MASK 0x4
// PTTPin Shadow defines
//   PTTPin_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define PTTPin_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// menue_taste address and mask defines
#pragma	ioport	menue_taste_Data_ADDR:	0x4
BYTE			menue_taste_Data_ADDR;
#pragma	ioport	menue_taste_DriveMode_0_ADDR:	0x104
BYTE			menue_taste_DriveMode_0_ADDR;
#pragma	ioport	menue_taste_DriveMode_1_ADDR:	0x105
BYTE			menue_taste_DriveMode_1_ADDR;
#pragma	ioport	menue_taste_DriveMode_2_ADDR:	0x7
BYTE			menue_taste_DriveMode_2_ADDR;
#pragma	ioport	menue_taste_GlobalSelect_ADDR:	0x6
BYTE			menue_taste_GlobalSelect_ADDR;
#pragma	ioport	menue_taste_IntCtrl_0_ADDR:	0x106
BYTE			menue_taste_IntCtrl_0_ADDR;
#pragma	ioport	menue_taste_IntCtrl_1_ADDR:	0x107
BYTE			menue_taste_IntCtrl_1_ADDR;
#pragma	ioport	menue_taste_IntEn_ADDR:	0x5
BYTE			menue_taste_IntEn_ADDR;
#define menue_taste_MASK 0x10
// menue_taste Shadow defines
//   menue_taste_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define menue_taste_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// drehgeber_1 address and mask defines
#pragma	ioport	drehgeber_1_Data_ADDR:	0x4
BYTE			drehgeber_1_Data_ADDR;
#pragma	ioport	drehgeber_1_DriveMode_0_ADDR:	0x104
BYTE			drehgeber_1_DriveMode_0_ADDR;
#pragma	ioport	drehgeber_1_DriveMode_1_ADDR:	0x105
BYTE			drehgeber_1_DriveMode_1_ADDR;
#pragma	ioport	drehgeber_1_DriveMode_2_ADDR:	0x7
BYTE			drehgeber_1_DriveMode_2_ADDR;
#pragma	ioport	drehgeber_1_GlobalSelect_ADDR:	0x6
BYTE			drehgeber_1_GlobalSelect_ADDR;
#pragma	ioport	drehgeber_1_IntCtrl_0_ADDR:	0x106
BYTE			drehgeber_1_IntCtrl_0_ADDR;
#pragma	ioport	drehgeber_1_IntCtrl_1_ADDR:	0x107
BYTE			drehgeber_1_IntCtrl_1_ADDR;
#pragma	ioport	drehgeber_1_IntEn_ADDR:	0x5
BYTE			drehgeber_1_IntEn_ADDR;
#define drehgeber_1_MASK 0x40
// drehgeber_1 Shadow defines
//   drehgeber_1_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define drehgeber_1_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// LCD_1D4 address and mask defines
#pragma	ioport	LCD_1D4_Data_ADDR:	0x8
BYTE			LCD_1D4_Data_ADDR;
#pragma	ioport	LCD_1D4_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D4_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D4_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D4_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D4_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D4_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D4_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D4_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D4_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D4_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D4_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D4_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D4_IntEn_ADDR:	0x9
BYTE			LCD_1D4_IntEn_ADDR;
#define LCD_1D4_MASK 0x1
// LCD_1D4 Shadow defines
//   LCD_1D4_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D4_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D4_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D4_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D4_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D4_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1D5 address and mask defines
#pragma	ioport	LCD_1D5_Data_ADDR:	0x8
BYTE			LCD_1D5_Data_ADDR;
#pragma	ioport	LCD_1D5_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D5_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D5_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D5_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D5_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D5_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D5_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D5_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D5_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D5_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D5_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D5_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D5_IntEn_ADDR:	0x9
BYTE			LCD_1D5_IntEn_ADDR;
#define LCD_1D5_MASK 0x2
// LCD_1D5 Shadow defines
//   LCD_1D5_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D5_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D5_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D5_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D5_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D5_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1D6 address and mask defines
#pragma	ioport	LCD_1D6_Data_ADDR:	0x8
BYTE			LCD_1D6_Data_ADDR;
#pragma	ioport	LCD_1D6_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D6_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D6_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D6_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D6_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D6_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D6_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D6_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D6_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D6_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D6_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D6_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D6_IntEn_ADDR:	0x9
BYTE			LCD_1D6_IntEn_ADDR;
#define LCD_1D6_MASK 0x4
// LCD_1D6 Shadow defines
//   LCD_1D6_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D6_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D6_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D6_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D6_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D6_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1D7 address and mask defines
#pragma	ioport	LCD_1D7_Data_ADDR:	0x8
BYTE			LCD_1D7_Data_ADDR;
#pragma	ioport	LCD_1D7_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D7_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D7_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D7_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D7_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D7_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D7_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D7_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D7_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D7_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D7_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D7_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D7_IntEn_ADDR:	0x9
BYTE			LCD_1D7_IntEn_ADDR;
#define LCD_1D7_MASK 0x8
// LCD_1D7 Shadow defines
//   LCD_1D7_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D7_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D7_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D7_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D7_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D7_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1E address and mask defines
#pragma	ioport	LCD_1E_Data_ADDR:	0x8
BYTE			LCD_1E_Data_ADDR;
#pragma	ioport	LCD_1E_DriveMode_0_ADDR:	0x108
BYTE			LCD_1E_DriveMode_0_ADDR;
#pragma	ioport	LCD_1E_DriveMode_1_ADDR:	0x109
BYTE			LCD_1E_DriveMode_1_ADDR;
#pragma	ioport	LCD_1E_DriveMode_2_ADDR:	0xb
BYTE			LCD_1E_DriveMode_2_ADDR;
#pragma	ioport	LCD_1E_GlobalSelect_ADDR:	0xa
BYTE			LCD_1E_GlobalSelect_ADDR;
#pragma	ioport	LCD_1E_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1E_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1E_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1E_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1E_IntEn_ADDR:	0x9
BYTE			LCD_1E_IntEn_ADDR;
#define LCD_1E_MASK 0x10
// LCD_1E Shadow defines
//   LCD_1E_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1E_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1E_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1E_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1E_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1E_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1RS address and mask defines
#pragma	ioport	LCD_1RS_Data_ADDR:	0x8
BYTE			LCD_1RS_Data_ADDR;
#pragma	ioport	LCD_1RS_DriveMode_0_ADDR:	0x108
BYTE			LCD_1RS_DriveMode_0_ADDR;
#pragma	ioport	LCD_1RS_DriveMode_1_ADDR:	0x109
BYTE			LCD_1RS_DriveMode_1_ADDR;
#pragma	ioport	LCD_1RS_DriveMode_2_ADDR:	0xb
BYTE			LCD_1RS_DriveMode_2_ADDR;
#pragma	ioport	LCD_1RS_GlobalSelect_ADDR:	0xa
BYTE			LCD_1RS_GlobalSelect_ADDR;
#pragma	ioport	LCD_1RS_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1RS_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1RS_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1RS_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1RS_IntEn_ADDR:	0x9
BYTE			LCD_1RS_IntEn_ADDR;
#define LCD_1RS_MASK 0x20
// LCD_1RS Shadow defines
//   LCD_1RS_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1RS_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1RS_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1RS_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1RS_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1RS_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1RW address and mask defines
#pragma	ioport	LCD_1RW_Data_ADDR:	0x8
BYTE			LCD_1RW_Data_ADDR;
#pragma	ioport	LCD_1RW_DriveMode_0_ADDR:	0x108
BYTE			LCD_1RW_DriveMode_0_ADDR;
#pragma	ioport	LCD_1RW_DriveMode_1_ADDR:	0x109
BYTE			LCD_1RW_DriveMode_1_ADDR;
#pragma	ioport	LCD_1RW_DriveMode_2_ADDR:	0xb
BYTE			LCD_1RW_DriveMode_2_ADDR;
#pragma	ioport	LCD_1RW_GlobalSelect_ADDR:	0xa
BYTE			LCD_1RW_GlobalSelect_ADDR;
#pragma	ioport	LCD_1RW_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1RW_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1RW_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1RW_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1RW_IntEn_ADDR:	0x9
BYTE			LCD_1RW_IntEn_ADDR;
#define LCD_1RW_MASK 0x40
// LCD_1RW Shadow defines
//   LCD_1RW_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1RW_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1RW_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1RW_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1RW_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1RW_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// Rs232_TX_DRA address and mask defines
#pragma	ioport	Rs232_TX_DRA_Data_ADDR:	0x8
BYTE			Rs232_TX_DRA_Data_ADDR;
#pragma	ioport	Rs232_TX_DRA_DriveMode_0_ADDR:	0x108
BYTE			Rs232_TX_DRA_DriveMode_0_ADDR;
#pragma	ioport	Rs232_TX_DRA_DriveMode_1_ADDR:	0x109
BYTE			Rs232_TX_DRA_DriveMode_1_ADDR;
#pragma	ioport	Rs232_TX_DRA_DriveMode_2_ADDR:	0xb
BYTE			Rs232_TX_DRA_DriveMode_2_ADDR;
#pragma	ioport	Rs232_TX_DRA_GlobalSelect_ADDR:	0xa
BYTE			Rs232_TX_DRA_GlobalSelect_ADDR;
#pragma	ioport	Rs232_TX_DRA_IntCtrl_0_ADDR:	0x10a
BYTE			Rs232_TX_DRA_IntCtrl_0_ADDR;
#pragma	ioport	Rs232_TX_DRA_IntCtrl_1_ADDR:	0x10b
BYTE			Rs232_TX_DRA_IntCtrl_1_ADDR;
#pragma	ioport	Rs232_TX_DRA_IntEn_ADDR:	0x9
BYTE			Rs232_TX_DRA_IntEn_ADDR;
#define Rs232_TX_DRA_MASK 0x80
// Rs232_TX_DRA Shadow defines
//   Rs232_TX_DRA_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define Rs232_TX_DRA_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   Rs232_TX_DRA_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define Rs232_TX_DRA_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   Rs232_TX_DRA_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define Rs232_TX_DRA_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
