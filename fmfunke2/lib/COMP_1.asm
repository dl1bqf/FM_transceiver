;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: COMP_1.asm
;;   Version: 2.20, Updated on 2015/3/4 at 22:23:39
;;  Generated by PSoC Designer 5.4.3191
;;
;;  DESCRIPTION: COMP User Module software implementation file
;;
;;  NOTE: User Module APIs conform to the fastcall16 convention for marshalling
;;        arguments and observe the associated "Registers are volatile" policy.
;;        This means it is the caller's responsibility to preserve any values
;;        in the X and A registers that are still needed after the API functions
;;        returns. For Large Memory Model devices it is also the caller's 
;;        responsibility to perserve any value in the CUR_PP, IDX_PP, MVR_PP and 
;;        MVW_PP registers. Even though some of these registers may not be modified
;;        now, there is no guarantee that will remain the case in future releases.
;;-----------------------------------------------------------------------------
;; Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "memory.inc"
include "COMP_1.inc"

;-----------------------------------------------
;  Global Symbols
;-----------------------------------------------

export  COMP_1_Start
export _COMP_1_Start
export  COMP_1_Stop
export _COMP_1_Stop
export  COMP_1_SetPower
export _COMP_1_SetPower
export  COMP_1_SetPolarity
export _COMP_1_SetPolarity
export  COMP_1_SetRef
export _COMP_1_SetRef

export  COMP_1_EnableInt
export _COMP_1_EnableInt
export  COMP_1_DisableInt
export _COMP_1_DisableInt
export  COMP_1_ClearInt
export _COMP_1_ClearInt

;-----------------------------------------------
;  Constant Definitions
;-----------------------------------------------

COMP_1_POLMASK:      equ 0x01
COMP_1_POWERMASK:    equ 0x03
COMP_1_REFMASK:      equ 0xF0
COMP_1_EXGAIN:       equ 0x01
COMP_1_GAINMASK:     equ 0xF4
COMP_1_HIGHGAINMASK: equ 0x10
COMP_1_HIGHGAIN:     equ 0x04

;-----------------------------------------------
; Variable Allocation
;-----------------------------------------------

AREA UserModules (ROM, REL)

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_Start
;  FUNCTION NAME: COMP_1_SetPower
;
;  DESCRIPTION:
;  Applies power setting to the module's analog blocks
;-----------------------------------------------------------------------------
;  ARGUMENTS:    
;   A  Contains the power settings 0=Off, 1=Low, 2=Med, and 3=High.
;  RETURNS:      Nothing.
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 COMP_1_Start:
_COMP_1_Start:
 COMP_1_SetPower:
_COMP_1_SetPower:

   RAM_PROLOGUE RAM_USE_CLASS_2
   and A, COMP_1_POWERMASK                       ; mask A to protect unchanged bits
   mov X, SP                                     ; define temp store location

   push A                                        ; put power value in temp store
   mov A, reg[COMP_1_CR2]                        ; read power value
   and A, ~COMP_1_POWERMASK                      ; clear power bits in A
   or  A, [X]                                    ; combine power value with balance of reg.
   mov reg[COMP_1_CR2], A
   pop A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_Stop
;
;  DESCRIPTION:
;  Removes power setting to the module's analog blocks.
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      Nothing.
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 COMP_1_Stop:
_COMP_1_Stop:

   RAM_PROLOGUE RAM_USE_CLASS_1
   and   reg[COMP_1_CR2], ~COMP_1_POWERMASK   ; Turn off Power to analog block
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_SetRef
;
;  DESCRIPTION:
;    Sets comparator threshold at specified ratio between Low Limit and Vcc
;-----------------------------------------------------------------------------
;  ARGUMENTS:
;   A contains reference value.
;     Ref values shown are for example
;     1.000     f0h
;     0.937     e0h
;     ....
;     0.500     70h
;     ....
;     0.062     00h
;     0.042     14h
;     0.021     04h
;
;  RETURNS: none
;
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 COMP_1_SetRef:
_COMP_1_SetRef:

   RAM_PROLOGUE RAM_USE_CLASS_2
   and  A, COMP_1_GAINMASK                       ; mask A to protect unchanged bits
   mov  X, SP                                    ; define temp store location
   push A                                        ; put reference value in temp store
   mov  A, reg[COMP_1_CR0]                       ; read old CR0 value
   and  A, ~COMP_1_REFMASK                       ; clear reference bits in A
   tst  [X], COMP_1_HIGHGAIN                     ; See if High Gain bit is set
   jnz  .sethigain
   
   and  reg[COMP_1_CR3], ~COMP_1_EXGAIN          ; Clear High Gain bit.
   jmp  .setlogain
   
.sethigain:
   or   reg[COMP_1_CR3], COMP_1_EXGAIN           ; Set High Gain bit.
   and  [X], COMP_1_HIGHGAINMASK                 ; Make sure we have a valid high gain
   
.setlogain:   
   or   A, [X]                                   ; combine gain value with balance of reg.
   mov  reg[COMP_1_CR0], A                       ; move complete value back to register
   pop  A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_SetPolarity
;
;  DESCRIPTION:
;    Sets comparator output polarity;
;-----------------------------------------------------------------------------
;  ARGUMENTS:
;  A  Contains the polarity settings 0=Neg., 1=Pos.
;  RETURNS: none
;  SIDE EFFECTS:
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.
;
 COMP_1_SetPolarity:
_COMP_1_SetPolarity:
   
   RAM_PROLOGUE RAM_USE_CLASS_2
   and  A, COMP_1_POLMASK
   jz   .lut_nA
   mov  A, COMP_1_LUT_A
   jmp  .lut_A
.lut_nA:   
   mov  A, COMP_1_LUT_NA
.lut_A:
   mov  X, SP
   push A
   M8C_SetBank1
   mov  A, reg[COMP_1_LUT_REG]
   and  A, ~COMP_1_LUT_MASK
   or   A, [X]
   mov  reg[COMP_1_LUT_REG], A
   M8C_SetBank0
   pop  A
   RAM_EPILOGUE RAM_USE_CLASS_2
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_EnableInt
;
;  DESCRIPTION:
;  Enables the Analog Column Interrupt
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      Nothing.
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 COMP_1_EnableInt:
_COMP_1_EnableInt:
   RAM_PROLOGUE RAM_USE_CLASS_1
;Enable the AColumn Interrupt
   M8C_EnableIntMask COMP_1_INT_REG, COMP_1_INT_MASK  ;enable ACol interrupt
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_DisableInt
;
;  DESCRIPTION:
;  Disables the Analog Column Interrupt
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      Nothing.
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 COMP_1_DisableInt:
_COMP_1_DisableInt:
   RAM_PROLOGUE RAM_USE_CLASS_1
;Disable the AColumn Interrupt
   M8C_DisableIntMask COMP_1_INT_REG, COMP_1_INT_MASK  ;disable ACol interrupt
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

.SECTION
;-----------------------------------------------------------------------------
;  FUNCTION NAME: COMP_1_ClearInt
;
;  DESCRIPTION:
;  Cleares the pending Analog Column Interrupt
;-----------------------------------------------------------------------------
;  ARGUMENTS:    None.
;  RETURNS:      Nothing.
;  SIDE EFFECTS: 
;    The A and X registers may be modified by this or future implementations
;    of this function.  The same is true for all RAM page pointer registers in
;    the Large Memory Model.  When necessary, it is the calling function's
;    responsibility to perserve their values across calls to fastcall16 
;    functions.

 COMP_1_ClearInt:
_COMP_1_ClearInt:
   RAM_PROLOGUE RAM_USE_CLASS_1
;Cleare the pending AColumn Interrupt
   M8C_ClearIntFlag COMP_1_INT_CLR_REG, COMP_1_INT_MASK  ;clearing ACol interrupt
   RAM_EPILOGUE RAM_USE_CLASS_1
   ret
.ENDSECTION

; End of File COMP_1.asm
