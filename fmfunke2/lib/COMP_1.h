//*****************************************************************************
//*****************************************************************************
//  FILENAME: COMP_1.h
//   Version: 2.20, Updated on 2015/3/4 at 22:23:39
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: COMP User Module C Language interface file
//-----------------------------------------------------------------------------
// Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef COMP_1_INCLUDE
#define COMP_1_INCLUDE

#include <m8c.h>

//-------------------------------------------------
// Defines for COMP_1 API's.
//-------------------------------------------------

#define COMP_1_LOWPOWER   1
#define COMP_1_MEDPOWER   2
#define COMP_1_HIGHPOWER  3

#define COMP_1_POL_POS    1
#define COMP_1_POL_NEG    0

#define COMP_1_REF1_000   0xf0
#define COMP_1_REF0_937   0xe0
#define COMP_1_REF0_875   0xd0
#define COMP_1_REF0_812   0xc0
#define COMP_1_REF0_750   0xb0
#define COMP_1_REF0_688   0xa0
#define COMP_1_REF0_625   0x90
#define COMP_1_REF0_562   0x80
#define COMP_1_REF0_500   0x70
#define COMP_1_REF0_437   0x60
#define COMP_1_REF0_375   0x50
#define COMP_1_REF0_312   0x40
#define COMP_1_REF0_250   0x30
#define COMP_1_REF0_188   0x20
#define COMP_1_REF0_125   0x10
#define COMP_1_REF0_062   0x00
#define COMP_1_REF0_042   0x14
#define COMP_1_REF0_021   0x04


#pragma fastcall16 COMP_1_Start			// Write CR2
#pragma fastcall16 COMP_1_Stop			// Write CR2
#pragma fastcall16 COMP_1_SetPower		// Write CR2
#pragma fastcall16 COMP_1_SetPolarity		// Write LUT control register
#pragma fastcall16 COMP_1_SetRef			// Write CR0, CR3

#pragma fastcall16 COMP_1_EnableInt
#pragma fastcall16 COMP_1_DisableInt
#pragma fastcall16 COMP_1_ClearInt

//-------------------------------------------------
// Prototypes of the COMP_1 API.
//-------------------------------------------------

extern void COMP_1_Start(BYTE bPower);
extern void COMP_1_Stop(void);
extern void COMP_1_SetPower(BYTE bPower);
extern void COMP_1_SetPolarity(BYTE bPolarity);
extern void COMP_1_SetRef(BYTE bReference);

extern void COMP_1_EnableInt(void);
extern void COMP_1_DisableInt(void);
extern void COMP_1_ClearInt(void);

//-------------------------------------------------
// Register Addresses for COMP_1
//-------------------------------------------------

#pragma ioport  COMP_1_CR0: 0x07d
BYTE            COMP_1_CR0;
#pragma ioport  COMP_1_CR1: 0x07e
BYTE            COMP_1_CR1;
#pragma ioport  COMP_1_CR2: 0x07f
BYTE            COMP_1_CR2;
#pragma ioport  COMP_1_CR3: 0x07c
BYTE            COMP_1_CR3;

#pragma ioport  COMP_1_INT_REG:     0x0e0    //Interrupt Mask Register
BYTE            COMP_1_INT_REG;
#pragma ioport  COMP_1_INT_CLR_REG: 0xda     //Interrupt Clear Register
BYTE            COMP_1_INT_CLR_REG;
#pragma ioport  COMP_1_LUT_REG:     0x67     //LUT control Register
BYTE            COMP_1_LUT_REG;

#endif
// end of file COMP_1.h
